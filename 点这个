#include <Windows.h>
#include <winuser.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include "graphics.h"
#include "extgraph.h"
#include "imgui.h"

#include"Class.h"
#include"File.h"
#include"UI.h"
#include"Write.h"
#include"Event.h"

#define MAX_LINE 100
#define MAX_ROWS 50

	char SelfName1[10] = "未命名1";
	char SelfName2[10] = "未命名2";
	char SelfName3[10] = "未命名3";
	char SelfName4[10] = "未命名4";
	char SelfName5[10] = "未命名5";
	char SelfName6[10] = "未命名6";
	char NewSelfName1[10] = "";
	char NewSelfName2[10] = "";
	char NewSelfName3[10] = "";
	char NewSelfName4[10] = "";
	char NewSelfName5[10] = "";
	char NewSelfName6[10] = "";
	int ifFirst =1;

extern char text[MAX_ROWS][MAX_LINE + 1];
typedef struct  myNote {
	char mytitle[40];  //笔记名字
	char myclass[40];  //笔记类别
	struct myNote* next;
}Note;
extern Note* head, * tail;
extern int classflag;
extern double winwidth, winheight;
char lei[40];//取值为A~F
extern char notename[50][100];
extern char noteclass[50][40];
extern int allnotes;
extern int flag;
extern int line_count;

/*支持点击查看文件*/
void class_display();
/*画出6个类别*/
void drawClass();
/*进入某一类别*/
void displayclassAll();
/*查找笔记*/
int search(char* name);
/*创建链表*/
void LinkList();
/*笔记删除*/
void Delete(char* name);

void class_display()
{
	DisplayClear();
	int ifmod = 0;//是否开始查找还是分类
	/*菜单*/
	{
		SetFont("宋体");
		SetPointSize(15);
		SetStyle(1);
		static char* menuListBack[] = { "返回", "上一级", "退出" };
		static char* menuListFunc[] = { "功能", "查找", "删除" };
		setMenuColors("White", "Blue", "White", "black", 1);

		int selection = 0;
		double fH = GetFontHeight();
		double x = 0;
		double y = winheight;
		double h = fH * 1.8;
		double w = TextStringWidth(menuListBack[0]) * 3;
		drawMenuBar(x, y - h, 6 * w, h);

		/*以下归属于"返回"*/
		selection = menuList(GenUIID(0), x, y - h, w, w, h, menuListBack, sizeof(menuListBack) / sizeof(menuListBack[0]));
		if (selection == 1)
		{
			/*返回上一级*/
			memset(text, 0, sizeof(text));
			flag = 0;
			DisplayStart();
		}
		if (selection == 2)
		{
			exit(-1);
		}

		/*查找与分类*/
		static char findname[40] = "";
		static char newclass[40] = "";
		drawLabel(x + w, y - 3 * h, "在下方输入要查找/分类的笔记名称");
		textbox(GenUIID(10), x + w, y - 4 * h, 2 * w, h, findname, sizeof(findname));
		drawLabel(x + w, y - 5 * h, "在下方输入要分到的类别");
		textbox(GenUIID(11), x + w, y - 6 * h, 2 * w, h, newclass, sizeof(newclass));
		ifmod = 0;
		if (button(GenUIID(0), x + 4 * w, y - 4 * h, w, h, "搜索")) {
			ifmod = 1;
		}
		if (button(GenUIID(1), x + 4 * w, y - 6 * h, w, h, "分类")) {
			ifmod = 2;
		}
		if (ifmod == 1) {/*搜索*/
			FILE* fp = fopen(findname, "r+");
			if (fp == NULL)drawLabel(x + 3 * w, y - 4 * h, "不存在该笔记");
			else {
				memset(text, 0, sizeof(text));
				line_count = 0;
				while (fgets(text[line_count], 100, fp) != NULL)line_count++;
				flag = 1;
				write_display();
				fclose(fp);
			}
		}
		else if (ifmod == 2) {/*分类*/
			int find = search(findname);
			if (find == -1)drawLabel(x + 3 * w, y - 5 * h, "不存在该笔记");
			else {
				strcpy(noteclass[find], newclass);
				drawLabel(x + 3 * w, y - 5 * h, "分类成功");
			}
		}
	}
	
	
	//
	if(ifFirst){
		ifFirst = 0;
		FILE* fp;
		char line[100];
		fp = fopen("D:\\re_vs\\tutorialsVS2010 - 副本 - 副本 - 副本now\\0-emptywindow\\ClassName.txt", "r");
		fgets(line, sizeof(line), fp);
		sscanf(line,"%s %s %s %s %s %s",SelfName1,SelfName2,SelfName3,SelfName4,SelfName5,SelfName6);
		fclose(fp);
	}

	
	int thesize = GetPenSize();
	double chang = 1.5;
	double gao = 1.8;
	double xishushang = 0.55;
	double xishuxia = 0.20;

	
	
	//textbox(GenUIID(0), 0.1 * winwidth, xishushang * winheight - 0.5, chang, gao * 0.25, SelfName1, sizeof(SelfName1));
	if( textbox(GenUIID(0), 0.1 * winwidth, xishushang * winheight - 0.5, chang, gao * 0.25, SelfName1, sizeof(SelfName1) ) )
	{
		sprintf(NewSelfName1,"%s", SelfName1);
	}
	
	textbox(GenUIID(0), 0.4 * winwidth, xishushang * winheight - 0.5, chang, gao * 0.25, SelfName2, sizeof(SelfName2));
	if( textbox(GenUIID(0), 0.4 * winwidth, xishushang * winheight - 0.5, chang, gao * 0.25, SelfName2, sizeof(SelfName2) ) )
	{
		sprintf(NewSelfName2,"%s", SelfName2);
	}
	
	textbox(GenUIID(0), 0.7 * winwidth, xishushang * winheight - 0.5, chang, gao * 0.25, SelfName3, sizeof(SelfName3));
	if( textbox(GenUIID(0), 0.7 * winwidth, xishushang * winheight - 0.5, chang, gao * 0.25, SelfName3, sizeof(SelfName3) ) )
	{
		sprintf(NewSelfName3,"%s", SelfName3);
	}
	
	textbox(GenUIID(0), 0.1 * winwidth, xishuxia * winheight - 0.5, chang, gao * 0.25, SelfName4, sizeof(SelfName4));
	if( textbox(GenUIID(0), 0.1 * winwidth, xishuxia * winheight - 0.5, chang, gao * 0.25, SelfName4, sizeof(SelfName4) ) )
	{
		sprintf(NewSelfName4,"%s", SelfName4);
	}
	
	textbox(GenUIID(1), 0.4 * winwidth, xishuxia * winheight - 0.5, chang, gao * 0.25, SelfName5, sizeof(SelfName5));
	if( textbox(GenUIID(1), 0.4 * winwidth, xishuxia * winheight - 0.5, chang, gao * 0.25, SelfName5, sizeof(SelfName5) ) )
	{
		sprintf(NewSelfName5,"%s", SelfName5);
	}
		
	textbox(GenUIID(2), 0.7 * winwidth, xishuxia * winheight - 0.5, chang, gao * 0.25, SelfName6, sizeof(SelfName6));
	if( textbox(GenUIID(2), 0.7 * winwidth, xishuxia * winheight - 0.5, chang, gao * 0.25, SelfName6, sizeof(SelfName6) ) )
	{
		sprintf(NewSelfName6,"%s", SelfName6);
	}
	

	
	
	/*6类*/
	drawClass();//显示当前所有类别,包括默认分类和自定义分类
	
	/*保存所有类别名称*/
	FILE* fpfp;
	fpfp = fopen("D:\\re_vs\\tutorialsVS2010 - 副本 - 副本 - 副本now\\0-emptywindow\\ClassName.txt", "w");
	fputs(SelfName1, fpfp);fputc(' ', fpfp);
	fputs(SelfName2, fpfp);fputc(' ', fpfp);
	fputs(SelfName3, fpfp);fputc(' ', fpfp);
	fputs(SelfName4, fpfp);fputc(' ', fpfp);
	fputs(SelfName5, fpfp);fputc(' ', fpfp);
	fputs(SelfName6, fpfp);fputc(' ', fpfp);
	fclose(fpfp);
}

void drawClass()
{
	int thesize = GetPenSize();
	double chang = 1.5;
	double gao = 1.8;
	double xishushang = 0.55;
	double xishuxia = 0.20;

	SetPenSize(5);
	SetPointSize(30);

	setButtonColors("Blue", "Black", "Black", "Black", 0);
	
	
	
	
	if (button(GenUIID(0), 0.10 * winwidth, xishushang * winheight, chang, gao, strlen(NewSelfName1)>1?NewSelfName1:SelfName1))
	{
		SetPenSize(thesize);
		DisplayClear();
		classflag = 1;
	}
	setButtonColors("Green", "Black", "Black", "Black", 0);
	if (button(GenUIID(1), 0.40 * winwidth, xishushang * winheight, chang, gao, strlen(NewSelfName2)>1?NewSelfName2:SelfName2))
	{
		SetPenSize(thesize);
		DisplayClear();
		classflag = 2;
	}
	setButtonColors("Magenta", "Black", "Black", "Black", 0);
	if (button(GenUIID(2), 0.70 * winwidth, xishushang * winheight, chang, gao, strlen(NewSelfName3)>1?NewSelfName3:SelfName3))
	{
		SetPenSize(thesize);
		classflag = 3;
		DisplayClear();
	}
	setButtonColors("Cyan", "Black", "Black", "Black", 0);
	if (button(GenUIID(0), 0.10 * winwidth, xishuxia * winheight, chang, gao, strlen(NewSelfName4)>1?NewSelfName4:SelfName4))
	{
		SetPenSize(thesize);
		classflag = 4;
		DisplayClear();
	}
	setButtonColors("Gray", "Black", "Black", "Black", 0);
	if (button(GenUIID(1), 0.40 * winwidth, xishuxia * winheight, chang, gao, strlen(NewSelfName5)>1?NewSelfName5:SelfName5))
	{
		SetPenSize(thesize);
		classflag = 5;
		DisplayClear();
	}
	setButtonColors("Yellow", "Black", "Black", "Black", 0);
	if (button(GenUIID(2), 0.70 * winwidth, xishuxia * winheight, chang, gao, strlen(NewSelfName6)>1?NewSelfName6:SelfName6))
	{
		SetPenSize(thesize);
		classflag = 6;
		DisplayClear();
	}

	SetPenSize(1);
	SetPointSize(20);
	setTextBoxColors("Blue", "Black", "Black", "Black", 0);
//	textbox(GenUIID(0), 0.1 * winwidth, xishushang * winheight - 0.5, chang, gao * 0.25, "默认分类", 20);

	setButtonColors("Blue", "Black", "Red", "Red", 0);
}

/*进入某一类别*/
void displayclassAll()
{
	FILE* fp = NULL;
	DisplayClear();
	/*菜单*/
	{
		SetFont("宋体");
		SetPointSize(15);
		SetStyle(1);
		static char* menuListBack[] = { "返回", "上一级", "退出" };
		setMenuColors("White", "Blue", "White", "Black", 1);

		int selection = 0;
		double fH = GetFontHeight();
		double x = 0;
		double y = winheight;
		double h = fH * 1.8; //菜单的高度
		double w = TextStringWidth(menuListBack[0]) * 3; //是"返回"宽度的3倍
		drawMenuBar(x, y - h, 6 * w, h);

		//以下归属于"返回"
		selection = menuList(GenUIID(0), x, y - h, w, w, h, menuListBack, sizeof(menuListBack) / sizeof(menuListBack[0]));
		if (selection == 1)
		{
			classflag = 0;
			class_display();
		}
		if (selection == 2)
		{
			exit(-1);
		}
	}

	if (classflag == 1) {
		strcpy(lei, "A");
	}
	else if (classflag == 2) {
		strcpy(lei, "B");
	}
	else if (classflag == 3) {
		strcpy(lei, "C");
	}
	else if (classflag == 4) {
		strcpy(lei, "D");
	}
	else if (classflag == 5) {
		strcpy(lei, "E");
	}
	else if (classflag == 6) {
		strcpy(lei, "F");
	}

	int k;/*遍历变量*/
	int pos;/*位置编号*/
	for (k = 0, pos = 0; k < allnotes; k++)
	{
		static char* menuListDel[] = { "删除","确认" };
		double h = GetFontHeight();
		double w = TextStringWidth(menuListDel[0]) * 3;
		SetPointSize(25);
		if (strcmp(noteclass[k], lei) == 0)
		{
			int selection = 0;
			if (pos < 3) {
				if (button(GenUIID(pos + 9), 0.25 + pos * 0.3 * winwidth, 0.55 * winheight, 0.60, 0.45, "删除"))
				{
					LinkList();
					Delete(notename[k]);
					UpDataDelete();
					SaveUserData();
					DisplayClear();
					displayclassAll();
				}

				if (button(GenUIID(pos), 0.1 * winwidth + pos * 0.3 * winwidth, 0.55 * winheight, 1.5, 1.8, notename[k]))
				{
					fp = fopen(notename[k], "r + ");
					memset(text, 0, sizeof(text));
					line_count = 0;
					while (fgets(text[line_count], 100, fp) != NULL)line_count++;
					flag = 1;
					classflag = 0;
					write_display();
				}
			}
			else if (pos >= 3 && pos < 6) {
				if (button(GenUIID(pos + 9), 0.25 + (pos - 3) * 0.3 * winwidth, 0.35 * winheight, 0.60, 0.45, "删除"))
				{
					LinkList();
					Delete(notename[k]);
					UpDataDelete();
					SaveUserData();
					DisplayClear();
					displayclassAll();
				}
				if (button(GenUIID(pos), 0.1 * winwidth + (pos - 3) * 0.3 * winwidth, 0.35 * winheight, 1.5, 1.8, notename[k]))
				{
					fp = fopen(notename[k], "r + ");
					memset(text, 0, sizeof(text));
					line_count = 0;
					while (fgets(text[line_count], 100, fp) != NULL)line_count++;
					flag = 1;
					classflag = 0;
					write_display();
				}
			}
			else if (k >= 6 && k < 9) {
				if (button(GenUIID(pos + 9), 0.25 + (pos - 6) * 0.3 * winwidth, 0.15 * winheight, 0.60, 0.45, "删除"))
				{
					LinkList();
					Delete(notename[k]);
					SaveUserData();
					UpDataDelete();
					DisplayClear();
					displayclassAll();
				}
				if (button(GenUIID(pos), 0.1 * winwidth + (pos - 6) * 0.3 * winwidth, 0.15 * winheight, 1.5, 1.8, notename[k]))
				{
					fp = fopen(notename[k], "r + ");
					memset(text, 0, sizeof(text));
					line_count = 0;
					while (fgets(text[line_count], 100, fp) != NULL)line_count++;
					flag = 1;
					classflag = 0;
					write_display();
				}
			}
			pos++;
		}
	}
}

/*查找笔记*/
int search(char* name)
{
	int find;
	for (find = 0; find < allnotes; find++) {
		if (strcmp(notename[find], name) == 0)
		{
			return find;
		}
	}
	return -1;
}

/*创建链表*/
void LinkList() {
	int i;
	for (i = 0; i < allnotes; i++) {
		Note* p = (Note*)malloc(sizeof(Note*));
		strcpy(p->mytitle, notename[i]);
		strcpy(p->myclass, noteclass[i]);
		if (head == NULL)tail = head = p;
		else {
			tail->next = p;
			tail = p;
		}
	}
	tail->next = NULL;
}

/*笔记删除*/
void Delete(char* name)
{
	if (head == NULL)return;
	Note* p = head;
	if (strcmp(head->mytitle, name) == 0) {
		head = head->next;
		return;
	}
	while (p->next != NULL) {
		if (strcmp(p->next->mytitle, name) == 0) {
			p->next = p->next->next;
			return;
		}
		if (p->next == NULL) {
			break;
		}
		p = p->next;
	}
}
